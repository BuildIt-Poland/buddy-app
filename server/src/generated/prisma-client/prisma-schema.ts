// Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `
  type AggregateBuddy {
    count: Int!
  }

  type AggregateBuddyTask {
    count: Int!
  }

  type AggregateNewbie {
    count: Int!
  }

  type AggregateNewbieTask {
    count: Int!
  }

  type BatchPayload {
    count: Long!
  }

  type Buddy {
    id: ID!
    name: String!
    email: String!
    role: UserRole!
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean!
    newbies(
      where: NewbieWhereInput
      orderBy: NewbieOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Newbie!]
  }

  type BuddyConnection {
    pageInfo: PageInfo!
    edges: [BuddyEdge]!
    aggregate: AggregateBuddy!
  }

  input BuddyCreateInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    newbies: NewbieCreateManyWithoutBuddyInput
  }

  input BuddyCreateOneWithoutNewbiesInput {
    create: BuddyCreateWithoutNewbiesInput
    connect: BuddyWhereUniqueInput
  }

  input BuddyCreateWithoutNewbiesInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
  }

  type BuddyEdge {
    node: Buddy!
    cursor: String!
  }

  enum BuddyOrderByInput {
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    email_ASC
    email_DESC
    role_ASC
    role_DESC
    password_ASC
    password_DESC
    position_ASC
    position_DESC
    photo_ASC
    photo_DESC
    phoneNumber_ASC
    phoneNumber_DESC
    startDate_ASC
    startDate_DESC
    allowPushedNotifications_ASC
    allowPushedNotifications_DESC
  }

  type BuddyPreviousValues {
    id: ID!
    name: String!
    email: String!
    role: UserRole!
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean!
  }

  type BuddySubscriptionPayload {
    mutation: MutationType!
    node: Buddy
    updatedFields: [String!]
    previousValues: BuddyPreviousValues
  }

  input BuddySubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: BuddyWhereInput
    AND: [BuddySubscriptionWhereInput!]
    OR: [BuddySubscriptionWhereInput!]
    NOT: [BuddySubscriptionWhereInput!]
  }

  type BuddyTask {
    id: ID!
    createdAt: DateTime!
    description: String!
    title: String!
    status: TaskStatus!
    newbie: Newbie!
  }

  type BuddyTaskConnection {
    pageInfo: PageInfo!
    edges: [BuddyTaskEdge]!
    aggregate: AggregateBuddyTask!
  }

  input BuddyTaskCreateInput {
    id: ID
    description: String
    title: String
    status: TaskStatus
    newbie: NewbieCreateOneWithoutBuddyTasksInput!
  }

  input BuddyTaskCreateManyWithoutNewbieInput {
    create: [BuddyTaskCreateWithoutNewbieInput!]
    connect: [BuddyTaskWhereUniqueInput!]
  }

  input BuddyTaskCreateWithoutNewbieInput {
    id: ID
    description: String
    title: String
    status: TaskStatus
  }

  type BuddyTaskEdge {
    node: BuddyTask!
    cursor: String!
  }

  enum BuddyTaskOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    description_ASC
    description_DESC
    title_ASC
    title_DESC
    status_ASC
    status_DESC
  }

  type BuddyTaskPreviousValues {
    id: ID!
    createdAt: DateTime!
    description: String!
    title: String!
    status: TaskStatus!
  }

  input BuddyTaskScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    status: TaskStatus
    status_not: TaskStatus
    status_in: [TaskStatus!]
    status_not_in: [TaskStatus!]
    AND: [BuddyTaskScalarWhereInput!]
    OR: [BuddyTaskScalarWhereInput!]
    NOT: [BuddyTaskScalarWhereInput!]
  }

  type BuddyTaskSubscriptionPayload {
    mutation: MutationType!
    node: BuddyTask
    updatedFields: [String!]
    previousValues: BuddyTaskPreviousValues
  }

  input BuddyTaskSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: BuddyTaskWhereInput
    AND: [BuddyTaskSubscriptionWhereInput!]
    OR: [BuddyTaskSubscriptionWhereInput!]
    NOT: [BuddyTaskSubscriptionWhereInput!]
  }

  input BuddyTaskUpdateInput {
    description: String
    title: String
    status: TaskStatus
    newbie: NewbieUpdateOneRequiredWithoutBuddyTasksInput
  }

  input BuddyTaskUpdateManyDataInput {
    description: String
    title: String
    status: TaskStatus
  }

  input BuddyTaskUpdateManyMutationInput {
    description: String
    title: String
    status: TaskStatus
  }

  input BuddyTaskUpdateManyWithoutNewbieInput {
    create: [BuddyTaskCreateWithoutNewbieInput!]
    delete: [BuddyTaskWhereUniqueInput!]
    connect: [BuddyTaskWhereUniqueInput!]
    set: [BuddyTaskWhereUniqueInput!]
    disconnect: [BuddyTaskWhereUniqueInput!]
    update: [BuddyTaskUpdateWithWhereUniqueWithoutNewbieInput!]
    upsert: [BuddyTaskUpsertWithWhereUniqueWithoutNewbieInput!]
    deleteMany: [BuddyTaskScalarWhereInput!]
    updateMany: [BuddyTaskUpdateManyWithWhereNestedInput!]
  }

  input BuddyTaskUpdateManyWithWhereNestedInput {
    where: BuddyTaskScalarWhereInput!
    data: BuddyTaskUpdateManyDataInput!
  }

  input BuddyTaskUpdateWithoutNewbieDataInput {
    description: String
    title: String
    status: TaskStatus
  }

  input BuddyTaskUpdateWithWhereUniqueWithoutNewbieInput {
    where: BuddyTaskWhereUniqueInput!
    data: BuddyTaskUpdateWithoutNewbieDataInput!
  }

  input BuddyTaskUpsertWithWhereUniqueWithoutNewbieInput {
    where: BuddyTaskWhereUniqueInput!
    update: BuddyTaskUpdateWithoutNewbieDataInput!
    create: BuddyTaskCreateWithoutNewbieInput!
  }

  input BuddyTaskWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    status: TaskStatus
    status_not: TaskStatus
    status_in: [TaskStatus!]
    status_not_in: [TaskStatus!]
    newbie: NewbieWhereInput
    AND: [BuddyTaskWhereInput!]
    OR: [BuddyTaskWhereInput!]
    NOT: [BuddyTaskWhereInput!]
  }

  input BuddyTaskWhereUniqueInput {
    id: ID
  }

  input BuddyUpdateInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    newbies: NewbieUpdateManyWithoutBuddyInput
  }

  input BuddyUpdateManyMutationInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
  }

  input BuddyUpdateOneRequiredWithoutNewbiesInput {
    create: BuddyCreateWithoutNewbiesInput
    update: BuddyUpdateWithoutNewbiesDataInput
    upsert: BuddyUpsertWithoutNewbiesInput
    connect: BuddyWhereUniqueInput
  }

  input BuddyUpdateWithoutNewbiesDataInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
  }

  input BuddyUpsertWithoutNewbiesInput {
    update: BuddyUpdateWithoutNewbiesDataInput!
    create: BuddyCreateWithoutNewbiesInput!
  }

  input BuddyWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    role: UserRole
    role_not: UserRole
    role_in: [UserRole!]
    role_not_in: [UserRole!]
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    position: String
    position_not: String
    position_in: [String!]
    position_not_in: [String!]
    position_lt: String
    position_lte: String
    position_gt: String
    position_gte: String
    position_contains: String
    position_not_contains: String
    position_starts_with: String
    position_not_starts_with: String
    position_ends_with: String
    position_not_ends_with: String
    photo: String
    photo_not: String
    photo_in: [String!]
    photo_not_in: [String!]
    photo_lt: String
    photo_lte: String
    photo_gt: String
    photo_gte: String
    photo_contains: String
    photo_not_contains: String
    photo_starts_with: String
    photo_not_starts_with: String
    photo_ends_with: String
    photo_not_ends_with: String
    phoneNumber: String
    phoneNumber_not: String
    phoneNumber_in: [String!]
    phoneNumber_not_in: [String!]
    phoneNumber_lt: String
    phoneNumber_lte: String
    phoneNumber_gt: String
    phoneNumber_gte: String
    phoneNumber_contains: String
    phoneNumber_not_contains: String
    phoneNumber_starts_with: String
    phoneNumber_not_starts_with: String
    phoneNumber_ends_with: String
    phoneNumber_not_ends_with: String
    startDate: DateTime
    startDate_not: DateTime
    startDate_in: [DateTime!]
    startDate_not_in: [DateTime!]
    startDate_lt: DateTime
    startDate_lte: DateTime
    startDate_gt: DateTime
    startDate_gte: DateTime
    allowPushedNotifications: Boolean
    allowPushedNotifications_not: Boolean
    newbies_every: NewbieWhereInput
    newbies_some: NewbieWhereInput
    newbies_none: NewbieWhereInput
    AND: [BuddyWhereInput!]
    OR: [BuddyWhereInput!]
    NOT: [BuddyWhereInput!]
  }

  input BuddyWhereUniqueInput {
    id: ID
    email: String
  }

  scalar DateTime

  scalar Long

  type Mutation {
    createBuddy(data: BuddyCreateInput!): Buddy!
    updateBuddy(data: BuddyUpdateInput!, where: BuddyWhereUniqueInput!): Buddy
    updateManyBuddies(
      data: BuddyUpdateManyMutationInput!
      where: BuddyWhereInput
    ): BatchPayload!
    upsertBuddy(
      where: BuddyWhereUniqueInput!
      create: BuddyCreateInput!
      update: BuddyUpdateInput!
    ): Buddy!
    deleteBuddy(where: BuddyWhereUniqueInput!): Buddy
    deleteManyBuddies(where: BuddyWhereInput): BatchPayload!
    createBuddyTask(data: BuddyTaskCreateInput!): BuddyTask!
    updateBuddyTask(
      data: BuddyTaskUpdateInput!
      where: BuddyTaskWhereUniqueInput!
    ): BuddyTask
    updateManyBuddyTasks(
      data: BuddyTaskUpdateManyMutationInput!
      where: BuddyTaskWhereInput
    ): BatchPayload!
    upsertBuddyTask(
      where: BuddyTaskWhereUniqueInput!
      create: BuddyTaskCreateInput!
      update: BuddyTaskUpdateInput!
    ): BuddyTask!
    deleteBuddyTask(where: BuddyTaskWhereUniqueInput!): BuddyTask
    deleteManyBuddyTasks(where: BuddyTaskWhereInput): BatchPayload!
    createNewbie(data: NewbieCreateInput!): Newbie!
    updateNewbie(data: NewbieUpdateInput!, where: NewbieWhereUniqueInput!): Newbie
    updateManyNewbies(
      data: NewbieUpdateManyMutationInput!
      where: NewbieWhereInput
    ): BatchPayload!
    upsertNewbie(
      where: NewbieWhereUniqueInput!
      create: NewbieCreateInput!
      update: NewbieUpdateInput!
    ): Newbie!
    deleteNewbie(where: NewbieWhereUniqueInput!): Newbie
    deleteManyNewbies(where: NewbieWhereInput): BatchPayload!
    createNewbieTask(data: NewbieTaskCreateInput!): NewbieTask!
    updateNewbieTask(
      data: NewbieTaskUpdateInput!
      where: NewbieTaskWhereUniqueInput!
    ): NewbieTask
    updateManyNewbieTasks(
      data: NewbieTaskUpdateManyMutationInput!
      where: NewbieTaskWhereInput
    ): BatchPayload!
    upsertNewbieTask(
      where: NewbieTaskWhereUniqueInput!
      create: NewbieTaskCreateInput!
      update: NewbieTaskUpdateInput!
    ): NewbieTask!
    deleteNewbieTask(where: NewbieTaskWhereUniqueInput!): NewbieTask
    deleteManyNewbieTasks(where: NewbieTaskWhereInput): BatchPayload!
  }

  enum MutationType {
    CREATED
    UPDATED
    DELETED
  }

  type Newbie {
    id: ID!
    name: String!
    email: String!
    role: UserRole!
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean!
    buddy: Buddy!
    notes: String!
    newbieTasks(
      where: NewbieTaskWhereInput
      orderBy: NewbieTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [NewbieTask!]
    buddyTasks(
      where: BuddyTaskWhereInput
      orderBy: BuddyTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [BuddyTask!]
  }

  type NewbieConnection {
    pageInfo: PageInfo!
    edges: [NewbieEdge]!
    aggregate: AggregateNewbie!
  }

  input NewbieCreateInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyCreateOneWithoutNewbiesInput!
    notes: String
    newbieTasks: NewbieTaskCreateManyWithoutNewbieInput
    buddyTasks: BuddyTaskCreateManyWithoutNewbieInput
  }

  input NewbieCreateManyWithoutBuddyInput {
    create: [NewbieCreateWithoutBuddyInput!]
    connect: [NewbieWhereUniqueInput!]
  }

  input NewbieCreateOneWithoutBuddyTasksInput {
    create: NewbieCreateWithoutBuddyTasksInput
    connect: NewbieWhereUniqueInput
  }

  input NewbieCreateOneWithoutNewbieTasksInput {
    create: NewbieCreateWithoutNewbieTasksInput
    connect: NewbieWhereUniqueInput
  }

  input NewbieCreateWithoutBuddyInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    notes: String
    newbieTasks: NewbieTaskCreateManyWithoutNewbieInput
    buddyTasks: BuddyTaskCreateManyWithoutNewbieInput
  }

  input NewbieCreateWithoutBuddyTasksInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyCreateOneWithoutNewbiesInput!
    notes: String
    newbieTasks: NewbieTaskCreateManyWithoutNewbieInput
  }

  input NewbieCreateWithoutNewbieTasksInput {
    id: ID
    name: String!
    email: String!
    role: UserRole
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyCreateOneWithoutNewbiesInput!
    notes: String
    buddyTasks: BuddyTaskCreateManyWithoutNewbieInput
  }

  type NewbieEdge {
    node: Newbie!
    cursor: String!
  }

  enum NewbieOrderByInput {
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    email_ASC
    email_DESC
    role_ASC
    role_DESC
    password_ASC
    password_DESC
    position_ASC
    position_DESC
    photo_ASC
    photo_DESC
    phoneNumber_ASC
    phoneNumber_DESC
    startDate_ASC
    startDate_DESC
    allowPushedNotifications_ASC
    allowPushedNotifications_DESC
    notes_ASC
    notes_DESC
  }

  type NewbiePreviousValues {
    id: ID!
    name: String!
    email: String!
    role: UserRole!
    password: String!
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean!
    notes: String!
  }

  input NewbieScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    role: UserRole
    role_not: UserRole
    role_in: [UserRole!]
    role_not_in: [UserRole!]
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    position: String
    position_not: String
    position_in: [String!]
    position_not_in: [String!]
    position_lt: String
    position_lte: String
    position_gt: String
    position_gte: String
    position_contains: String
    position_not_contains: String
    position_starts_with: String
    position_not_starts_with: String
    position_ends_with: String
    position_not_ends_with: String
    photo: String
    photo_not: String
    photo_in: [String!]
    photo_not_in: [String!]
    photo_lt: String
    photo_lte: String
    photo_gt: String
    photo_gte: String
    photo_contains: String
    photo_not_contains: String
    photo_starts_with: String
    photo_not_starts_with: String
    photo_ends_with: String
    photo_not_ends_with: String
    phoneNumber: String
    phoneNumber_not: String
    phoneNumber_in: [String!]
    phoneNumber_not_in: [String!]
    phoneNumber_lt: String
    phoneNumber_lte: String
    phoneNumber_gt: String
    phoneNumber_gte: String
    phoneNumber_contains: String
    phoneNumber_not_contains: String
    phoneNumber_starts_with: String
    phoneNumber_not_starts_with: String
    phoneNumber_ends_with: String
    phoneNumber_not_ends_with: String
    startDate: DateTime
    startDate_not: DateTime
    startDate_in: [DateTime!]
    startDate_not_in: [DateTime!]
    startDate_lt: DateTime
    startDate_lte: DateTime
    startDate_gt: DateTime
    startDate_gte: DateTime
    allowPushedNotifications: Boolean
    allowPushedNotifications_not: Boolean
    notes: String
    notes_not: String
    notes_in: [String!]
    notes_not_in: [String!]
    notes_lt: String
    notes_lte: String
    notes_gt: String
    notes_gte: String
    notes_contains: String
    notes_not_contains: String
    notes_starts_with: String
    notes_not_starts_with: String
    notes_ends_with: String
    notes_not_ends_with: String
    AND: [NewbieScalarWhereInput!]
    OR: [NewbieScalarWhereInput!]
    NOT: [NewbieScalarWhereInput!]
  }

  type NewbieSubscriptionPayload {
    mutation: MutationType!
    node: Newbie
    updatedFields: [String!]
    previousValues: NewbiePreviousValues
  }

  input NewbieSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: NewbieWhereInput
    AND: [NewbieSubscriptionWhereInput!]
    OR: [NewbieSubscriptionWhereInput!]
    NOT: [NewbieSubscriptionWhereInput!]
  }

  type NewbieTask {
    id: ID!
    createdAt: DateTime!
    description: String!
    title: String!
    status: TaskStatus!
    newbie: Newbie!
    notes: String
  }

  type NewbieTaskConnection {
    pageInfo: PageInfo!
    edges: [NewbieTaskEdge]!
    aggregate: AggregateNewbieTask!
  }

  input NewbieTaskCreateInput {
    id: ID
    description: String
    title: String
    status: TaskStatus
    newbie: NewbieCreateOneWithoutNewbieTasksInput!
    notes: String
  }

  input NewbieTaskCreateManyWithoutNewbieInput {
    create: [NewbieTaskCreateWithoutNewbieInput!]
    connect: [NewbieTaskWhereUniqueInput!]
  }

  input NewbieTaskCreateWithoutNewbieInput {
    id: ID
    description: String
    title: String
    status: TaskStatus
    notes: String
  }

  type NewbieTaskEdge {
    node: NewbieTask!
    cursor: String!
  }

  enum NewbieTaskOrderByInput {
    id_ASC
    id_DESC
    createdAt_ASC
    createdAt_DESC
    description_ASC
    description_DESC
    title_ASC
    title_DESC
    status_ASC
    status_DESC
    notes_ASC
    notes_DESC
  }

  type NewbieTaskPreviousValues {
    id: ID!
    createdAt: DateTime!
    description: String!
    title: String!
    status: TaskStatus!
    notes: String
  }

  input NewbieTaskScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    status: TaskStatus
    status_not: TaskStatus
    status_in: [TaskStatus!]
    status_not_in: [TaskStatus!]
    notes: String
    notes_not: String
    notes_in: [String!]
    notes_not_in: [String!]
    notes_lt: String
    notes_lte: String
    notes_gt: String
    notes_gte: String
    notes_contains: String
    notes_not_contains: String
    notes_starts_with: String
    notes_not_starts_with: String
    notes_ends_with: String
    notes_not_ends_with: String
    AND: [NewbieTaskScalarWhereInput!]
    OR: [NewbieTaskScalarWhereInput!]
    NOT: [NewbieTaskScalarWhereInput!]
  }

  type NewbieTaskSubscriptionPayload {
    mutation: MutationType!
    node: NewbieTask
    updatedFields: [String!]
    previousValues: NewbieTaskPreviousValues
  }

  input NewbieTaskSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: NewbieTaskWhereInput
    AND: [NewbieTaskSubscriptionWhereInput!]
    OR: [NewbieTaskSubscriptionWhereInput!]
    NOT: [NewbieTaskSubscriptionWhereInput!]
  }

  input NewbieTaskUpdateInput {
    description: String
    title: String
    status: TaskStatus
    newbie: NewbieUpdateOneRequiredWithoutNewbieTasksInput
    notes: String
  }

  input NewbieTaskUpdateManyDataInput {
    description: String
    title: String
    status: TaskStatus
    notes: String
  }

  input NewbieTaskUpdateManyMutationInput {
    description: String
    title: String
    status: TaskStatus
    notes: String
  }

  input NewbieTaskUpdateManyWithoutNewbieInput {
    create: [NewbieTaskCreateWithoutNewbieInput!]
    delete: [NewbieTaskWhereUniqueInput!]
    connect: [NewbieTaskWhereUniqueInput!]
    set: [NewbieTaskWhereUniqueInput!]
    disconnect: [NewbieTaskWhereUniqueInput!]
    update: [NewbieTaskUpdateWithWhereUniqueWithoutNewbieInput!]
    upsert: [NewbieTaskUpsertWithWhereUniqueWithoutNewbieInput!]
    deleteMany: [NewbieTaskScalarWhereInput!]
    updateMany: [NewbieTaskUpdateManyWithWhereNestedInput!]
  }

  input NewbieTaskUpdateManyWithWhereNestedInput {
    where: NewbieTaskScalarWhereInput!
    data: NewbieTaskUpdateManyDataInput!
  }

  input NewbieTaskUpdateWithoutNewbieDataInput {
    description: String
    title: String
    status: TaskStatus
    notes: String
  }

  input NewbieTaskUpdateWithWhereUniqueWithoutNewbieInput {
    where: NewbieTaskWhereUniqueInput!
    data: NewbieTaskUpdateWithoutNewbieDataInput!
  }

  input NewbieTaskUpsertWithWhereUniqueWithoutNewbieInput {
    where: NewbieTaskWhereUniqueInput!
    update: NewbieTaskUpdateWithoutNewbieDataInput!
    create: NewbieTaskCreateWithoutNewbieInput!
  }

  input NewbieTaskWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    description: String
    description_not: String
    description_in: [String!]
    description_not_in: [String!]
    description_lt: String
    description_lte: String
    description_gt: String
    description_gte: String
    description_contains: String
    description_not_contains: String
    description_starts_with: String
    description_not_starts_with: String
    description_ends_with: String
    description_not_ends_with: String
    title: String
    title_not: String
    title_in: [String!]
    title_not_in: [String!]
    title_lt: String
    title_lte: String
    title_gt: String
    title_gte: String
    title_contains: String
    title_not_contains: String
    title_starts_with: String
    title_not_starts_with: String
    title_ends_with: String
    title_not_ends_with: String
    status: TaskStatus
    status_not: TaskStatus
    status_in: [TaskStatus!]
    status_not_in: [TaskStatus!]
    newbie: NewbieWhereInput
    notes: String
    notes_not: String
    notes_in: [String!]
    notes_not_in: [String!]
    notes_lt: String
    notes_lte: String
    notes_gt: String
    notes_gte: String
    notes_contains: String
    notes_not_contains: String
    notes_starts_with: String
    notes_not_starts_with: String
    notes_ends_with: String
    notes_not_ends_with: String
    AND: [NewbieTaskWhereInput!]
    OR: [NewbieTaskWhereInput!]
    NOT: [NewbieTaskWhereInput!]
  }

  input NewbieTaskWhereUniqueInput {
    id: ID
  }

  input NewbieUpdateInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyUpdateOneRequiredWithoutNewbiesInput
    notes: String
    newbieTasks: NewbieTaskUpdateManyWithoutNewbieInput
    buddyTasks: BuddyTaskUpdateManyWithoutNewbieInput
  }

  input NewbieUpdateManyDataInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    notes: String
  }

  input NewbieUpdateManyMutationInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    notes: String
  }

  input NewbieUpdateManyWithoutBuddyInput {
    create: [NewbieCreateWithoutBuddyInput!]
    delete: [NewbieWhereUniqueInput!]
    connect: [NewbieWhereUniqueInput!]
    set: [NewbieWhereUniqueInput!]
    disconnect: [NewbieWhereUniqueInput!]
    update: [NewbieUpdateWithWhereUniqueWithoutBuddyInput!]
    upsert: [NewbieUpsertWithWhereUniqueWithoutBuddyInput!]
    deleteMany: [NewbieScalarWhereInput!]
    updateMany: [NewbieUpdateManyWithWhereNestedInput!]
  }

  input NewbieUpdateManyWithWhereNestedInput {
    where: NewbieScalarWhereInput!
    data: NewbieUpdateManyDataInput!
  }

  input NewbieUpdateOneRequiredWithoutBuddyTasksInput {
    create: NewbieCreateWithoutBuddyTasksInput
    update: NewbieUpdateWithoutBuddyTasksDataInput
    upsert: NewbieUpsertWithoutBuddyTasksInput
    connect: NewbieWhereUniqueInput
  }

  input NewbieUpdateOneRequiredWithoutNewbieTasksInput {
    create: NewbieCreateWithoutNewbieTasksInput
    update: NewbieUpdateWithoutNewbieTasksDataInput
    upsert: NewbieUpsertWithoutNewbieTasksInput
    connect: NewbieWhereUniqueInput
  }

  input NewbieUpdateWithoutBuddyDataInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    notes: String
    newbieTasks: NewbieTaskUpdateManyWithoutNewbieInput
    buddyTasks: BuddyTaskUpdateManyWithoutNewbieInput
  }

  input NewbieUpdateWithoutBuddyTasksDataInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyUpdateOneRequiredWithoutNewbiesInput
    notes: String
    newbieTasks: NewbieTaskUpdateManyWithoutNewbieInput
  }

  input NewbieUpdateWithoutNewbieTasksDataInput {
    name: String
    email: String
    role: UserRole
    password: String
    position: String
    photo: String
    phoneNumber: String
    startDate: DateTime
    allowPushedNotifications: Boolean
    buddy: BuddyUpdateOneRequiredWithoutNewbiesInput
    notes: String
    buddyTasks: BuddyTaskUpdateManyWithoutNewbieInput
  }

  input NewbieUpdateWithWhereUniqueWithoutBuddyInput {
    where: NewbieWhereUniqueInput!
    data: NewbieUpdateWithoutBuddyDataInput!
  }

  input NewbieUpsertWithoutBuddyTasksInput {
    update: NewbieUpdateWithoutBuddyTasksDataInput!
    create: NewbieCreateWithoutBuddyTasksInput!
  }

  input NewbieUpsertWithoutNewbieTasksInput {
    update: NewbieUpdateWithoutNewbieTasksDataInput!
    create: NewbieCreateWithoutNewbieTasksInput!
  }

  input NewbieUpsertWithWhereUniqueWithoutBuddyInput {
    where: NewbieWhereUniqueInput!
    update: NewbieUpdateWithoutBuddyDataInput!
    create: NewbieCreateWithoutBuddyInput!
  }

  input NewbieWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    role: UserRole
    role_not: UserRole
    role_in: [UserRole!]
    role_not_in: [UserRole!]
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    position: String
    position_not: String
    position_in: [String!]
    position_not_in: [String!]
    position_lt: String
    position_lte: String
    position_gt: String
    position_gte: String
    position_contains: String
    position_not_contains: String
    position_starts_with: String
    position_not_starts_with: String
    position_ends_with: String
    position_not_ends_with: String
    photo: String
    photo_not: String
    photo_in: [String!]
    photo_not_in: [String!]
    photo_lt: String
    photo_lte: String
    photo_gt: String
    photo_gte: String
    photo_contains: String
    photo_not_contains: String
    photo_starts_with: String
    photo_not_starts_with: String
    photo_ends_with: String
    photo_not_ends_with: String
    phoneNumber: String
    phoneNumber_not: String
    phoneNumber_in: [String!]
    phoneNumber_not_in: [String!]
    phoneNumber_lt: String
    phoneNumber_lte: String
    phoneNumber_gt: String
    phoneNumber_gte: String
    phoneNumber_contains: String
    phoneNumber_not_contains: String
    phoneNumber_starts_with: String
    phoneNumber_not_starts_with: String
    phoneNumber_ends_with: String
    phoneNumber_not_ends_with: String
    startDate: DateTime
    startDate_not: DateTime
    startDate_in: [DateTime!]
    startDate_not_in: [DateTime!]
    startDate_lt: DateTime
    startDate_lte: DateTime
    startDate_gt: DateTime
    startDate_gte: DateTime
    allowPushedNotifications: Boolean
    allowPushedNotifications_not: Boolean
    buddy: BuddyWhereInput
    notes: String
    notes_not: String
    notes_in: [String!]
    notes_not_in: [String!]
    notes_lt: String
    notes_lte: String
    notes_gt: String
    notes_gte: String
    notes_contains: String
    notes_not_contains: String
    notes_starts_with: String
    notes_not_starts_with: String
    notes_ends_with: String
    notes_not_ends_with: String
    newbieTasks_every: NewbieTaskWhereInput
    newbieTasks_some: NewbieTaskWhereInput
    newbieTasks_none: NewbieTaskWhereInput
    buddyTasks_every: BuddyTaskWhereInput
    buddyTasks_some: BuddyTaskWhereInput
    buddyTasks_none: BuddyTaskWhereInput
    AND: [NewbieWhereInput!]
    OR: [NewbieWhereInput!]
    NOT: [NewbieWhereInput!]
  }

  input NewbieWhereUniqueInput {
    id: ID
    email: String
  }

  interface Node {
    id: ID!
  }

  type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
  }

  type Query {
    buddy(where: BuddyWhereUniqueInput!): Buddy
    buddies(
      where: BuddyWhereInput
      orderBy: BuddyOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Buddy]!
    buddiesConnection(
      where: BuddyWhereInput
      orderBy: BuddyOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): BuddyConnection!
    buddyTask(where: BuddyTaskWhereUniqueInput!): BuddyTask
    buddyTasks(
      where: BuddyTaskWhereInput
      orderBy: BuddyTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [BuddyTask]!
    buddyTasksConnection(
      where: BuddyTaskWhereInput
      orderBy: BuddyTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): BuddyTaskConnection!
    newbie(where: NewbieWhereUniqueInput!): Newbie
    newbies(
      where: NewbieWhereInput
      orderBy: NewbieOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Newbie]!
    newbiesConnection(
      where: NewbieWhereInput
      orderBy: NewbieOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): NewbieConnection!
    newbieTask(where: NewbieTaskWhereUniqueInput!): NewbieTask
    newbieTasks(
      where: NewbieTaskWhereInput
      orderBy: NewbieTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [NewbieTask]!
    newbieTasksConnection(
      where: NewbieTaskWhereInput
      orderBy: NewbieTaskOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): NewbieTaskConnection!
    node(id: ID!): Node
  }

  type Subscription {
    buddy(where: BuddySubscriptionWhereInput): BuddySubscriptionPayload
    buddyTask(where: BuddyTaskSubscriptionWhereInput): BuddyTaskSubscriptionPayload
    newbie(where: NewbieSubscriptionWhereInput): NewbieSubscriptionPayload
    newbieTask(
      where: NewbieTaskSubscriptionWhereInput
    ): NewbieTaskSubscriptionPayload
  }

  enum TaskStatus {
    COMPLETED
    UNCOMPLETED
  }

  enum UserRole {
    NEWBIE
    BUDDY
  }
`;
